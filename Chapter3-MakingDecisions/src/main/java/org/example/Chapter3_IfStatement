Control flow statements break up the flow of execution by
using decision-making, looping, and branching, allowing
the application to selectively execute particular segments of code

A statement or block often serves as the target of a decision-making statement. For
example, we can prepend the decision-making if statement to these two examples:
// Single statement
if(ticketsTaken > 1)
 patrons++;
// Statement inside a block
if(ticketsTaken > 1)
{
 patrons++;
}
Again, both of these code snippets are equivalent

IF STATEMENT:
The if statement, as
shown in Figure 3.1, accomplishes this by allowing our application to execute a particular
block of code if and only if a boolean expression evaluates to true at runtime.

Else Statement:
The else operator takes a statement or block of
statements, in the same manner as the if statement. Similarly, we can append additional if
statements to an else block to arrive at a more refined example:
if(hourOfDay < 11) {
 System.out.println("Good Morning");
} else if(hourOfDay < 15) {
 System.out.println("Good Afternoon");
} else {
 System.out.println("Good Evening");
}

Shortening Code with Pattern Matching
Pattern matching is a technique of controlling program flow that only executes a section
of code that meets certain criteria. It is used in conjunction with if statements for greater
program control.

. Flow scoping
means the variable is only in scope when the compiler can definitively determine its type.
